<?xml version="1.0" encoding="UTF-8"?>
<beans
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
 xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">

   <bean id="propertyPlaceholderConfigurer"
			   class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	   <property name="locations">
	  	 <value>/WEB-INF/config/jdbc.properties</value>
	   </property>
   </bean>

	 <!-- XML설정파일에서 지정하는 마이바티스의 핵심이 되는 설정은 트랜잭션을 제어하기 위한 TransactionManager과 함께 데이터베이스 Connection인스턴스를 가져오기 위한 DataSource 를 포함한다.  -->
   <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
      <property name="driver" value="${jdbc.driverClassName}" />
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />
   </bean>
   
   <!-- 모든 마이바티스 애플리케이션은 SqlSessionFactory 인스턴스를 사용한다. 
   SqlSessionFactory인스턴스는 SqlSessionFactoryBuilder를 사용하여 만들수 있다. 
   SqlSessionFactoryBuilder는 XML설정파일에서 SqlSessionFactory인스턴스를 빌드할 수 있다. -->
   <bean id="sqlSessionFactory"
         class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation"
         				value="classpath:mybatis/model/modelConfig.xml" />
      <property name="mapperLocations" 
      					value="classpath:mybatis/mappers/*.xml" />
   </bean>

	<!-- new SqlSessionTemplate(SqlSessionFactoryBean 참조변수) -->
   <bean id="sqlSession"
         class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactory"/>
   </bean>
   
   <!--  MemberDAOImpl객체 생성
   <bean id="memberDAO" 
   			class="com.spring.myapp.dao.MemberDAOImpl">
   		<property name="sqlSession" ref="sqlSession"></property>	
   </bean>
    -->
</beans>



